@startuml

package "Abstraction" #ffd1d1 {

Class Client
 
Class "BaseClass" as baseClass {
	createObject()
}
	
}
package "Implementations" #ffd1d1 {
	
	Class "ConcreteA" as a << (C,orchid)  >> {
		createObject()
	}
	Class "ConcreteB" as b << (C,orchid)  >> {
		createObject()
	}
	Class "ConcreteC" as c << (C,orchid)  >> {
		createObject()
	}
	
	note right
		Dependency Inversion
	end note
}

	
Client-[thickness=3]>baseClass
a--|>baseClass
b--|>baseClass
c--|>baseClass


@enduml